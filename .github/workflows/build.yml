name: Build & Release


on:
  push:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  build-version-number: 0.1.${{ github.run_number }}  
  dotnet-version: 8.x

jobs:
  sca:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}
          
      - name: Run SCA
        run: |
          dotnet tool restore
          dotnet run --project ./build/build.fsproj -t "SCA"
  
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore
              
      - name: Run tests
        run: dotnet run --project ./build/build.fsproj -c Release -t "Tests"
              
      - name: Archive Test results
        uses: actions/upload-artifact@v3
        with:
          name: tests.results
          path: |
            ./test/**/TestResults/*
      
      - name: Archive Code coverage
        uses: actions/upload-artifact@v3
        with:
          name: codecoverage
          path: ./publish/codecoverage/*.*

      - name: Unit test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: unit test results
          path: ${{ github.workspace }}/test/Tk.Toolkit.Cli.Tests.Unit/TestResults/test_results.trx
          reporter: dotnet-trx
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Code coverage results
        uses: 5monkeys/cobertura-action@master
        with:
          path: ${{ github.workspace }}/test/Tk.Toolkit.Cli.Tests.Unit/TestResults/coverage.info
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          fail_below_threshold: true
          show_line: true
          show_branch: true
          show_missing: true
          show_class_names: true
          link_missing_lines: true
          report_name: code coverage results        

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore
              
      - name: Run build
        run: dotnet run --project ./build/build.fsproj -c Release -t "Build"

      - name: Archive tool nupkg
        uses: actions/upload-artifact@v3
        with:
          name: tktk-cli.nupkg
          path: ./package/tktk*.nupkg
          
  codeql:
    uses: ./.github/workflows/codeql-analysis.yml
  
  stryker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore
              
      - name: Run build
        run: dotnet run --project ./build/build.fsproj -c Release -t  "Stryker"

      - name: Archive Stryker results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: stryker.results
          path: |
            ./StrykerOutput/**/reports/* 

  nuget-release:
    name: nuget release
    runs-on: ubuntu-latest
    needs:   [ sca, build, codeql, stryker, tests ]
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: tktk-cli.nupkg
          path: ${{ github.workspace }}/artifacts

      - name: Push nuget package
        run: dotnet nuget push "artifacts/*.nupkg"  --api-key ${{ secrets.NUGET_PAT }} --source "nuget.org"

  gh-release:
    name: gh release
    runs-on: ubuntu-latest
    needs: [ nuget-release ]    
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:    
      - uses: actions/checkout@v3

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.build-version-number }}
          prerelease: false
          generateReleaseNotes: true